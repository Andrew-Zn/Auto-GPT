interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7STTY/TQAyG7/wKy5dc0qjdbrclRxASCwcQXwURFE0TbzN0MhPFjrpLlf+Opk36
        kUp7QOIYe+b1877x7FDnGGNWKMnKyozm75c/3n1786F5Nf/+Z0mvP39a3Wb8sSnsvCQM0a1+Uybd
        jShzZWVItLMYYlaTEsoxntwtZpObu/HtPMTS5WQwxnUlo2k0G0lTr9xoPB1PMMSG1Zow3mFVu7KS
        VNyGLGM8ny1CPGkf6zfTcYjiRJlj6eVi0YaYFU5nxBj/3GFJ3MvWzhDGqJg1i7LiIZ0Vst7ALrEA
        AAlK4Zp1IZxgDF2xa9Cj+GKC92CJchAH21oLQfCWjHGwdLXJA9BWHCh40IbAqpJyCArfT7e+H8mj
        BKBsDlKQhc4W+S8QxZsIvhTky6U/c5rUMIFmCPYTU3Gp1w+iBMNzxpoUO6vtugfdWLcFKZTsBwxu
        H8do9vpnjrxXONqI4B6UYTdQOzoELlxjcljRtdUhYWWUPcCN4CvTs1j/HnCUJPZM3web9lFf6F/n
        P+DNai0601z2iebOBgJMBMo+gWZuiGGrpYDyCbw72MejGUSXNJTjitSml9pqY/Y/9v+EED63Zgke
        sNqwX/xu4NXee/UD8QXhwJiq18Mnc2j4syeJAeOFyPCZnfntaffEHXhiW2xDfNBWc5EeNh9jZHEV
        hqhtTo8Yj9tf7Yu/AAAA//8DAPTembXWBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd81c46de232bdb-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 18:34:34 GMT
      Function-Execution-Id:
      - ldyc5lzw9zkf
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '26115'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 2ed20baaa064674c2dfede855584b6d0;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86496'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - 6658ece846d0ef2f748ef31d1b709d90
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to write ''Hello World''
      into a file named ''hello_world.txt'' and then complete the task. The command
      I need to use is ''write_to_file''.\",\n        \"reasoning\": \"I know that
      the ''write_to_file'' command is used to write text to a file. I also know that
      the file name should be ''hello_world.txt''.\",\n        \"plan\": \"- Use the
      ''write_to_file'' command to write ''Hello World'' into a file named ''hello_world.txt''.\\n-
      Use the ''task_complete'' command to complete the task.\",\n        \"criticism\":
      \"I don''t see any issues with my plan at this time.\",\n        \"speak\":
      \"I will use the ''write_to_file'' command to write ''Hello World'' into a file
      named ''hello_world.txt'', and then complete the task.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"hello_world.txt\",\n            \"text\": \"Hello World\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4688'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5ySTW/TQBCG7/yK0Vx8caKkadLgGyeIKiEh+iGEUbS1J/Y2613jGeOEyP+98leT
        GsSB63w87/vuzgl1jAFGqZIoy83k5vbxm8sefj/nX/SHxa174Orj+j6h7OvqJ6GP7umZIuk3ppHL
        ckOinUUfo4KUUIzBfLVezq9Ws5u1j5mLyWCASS6TxXQ5kbJ4cpPZYjZHH0tWCWFwwrxwWS5bcXuy
        jMF8dv3exzP83FgtfRQnypxLV/Pr2scodToixuD7CTPiAVw4QxigYtYsykpj01kh20Q4hRYAIERJ
        XZmkwiEG0Bf7Bh2kKYb42VUgqRLYQKp+EVSFFiEL3icyxsGjK0zsgbbiQFKCnTYEXtr0tlXTm8pB
        PB82YIliEAd9OmrHRfF+CncpNeVM2fhisGQCzeA1M9thy5uG6F86LUixs9omnd0N7O3guBEYbb/K
        aG74bw2p1g40bU5LgdhVtoWohKyMhXOjbKc5gXumf6r9NfaIFxVadKQ5G4LEznoCTATKHkEzl8RQ
        aUkhO0KjDm1GzSA6ozGOc1L7AVVpY9r3/A+THbT2h5vpx/84Gasy6vTe8Ee2VJGMr+3yHzvAXfMN
        AyAGLqOImHelMcdXQ62p3ltoa6x93GmrOd12JAyQxeXoo7YxHTCY1T/qdy8AAAD//wMAnf02zPYD
        AAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd81d05ed6c2d55-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 18:34:56 GMT
      Function-Execution-Id:
      - ldycn1ijn256
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '17747'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 69adfc3ef358744f3eb621db9e39c8a6;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86014'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.656s
      X-Request-Id:
      - 34481c49ee4703d18d4e1d3efbfe650c
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Hello World\"\"\"\n\n\nCONCISE
      SUMMARY: The text is best summarized as"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '252'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOQWvCQBQG7/0V4TtvJBpNdW9CkULpSYq0tci6eSarm31h91laJP+9CK29Dsww
        F7gaGrY1Yrve5/dPm7fF+lStXs3DsxzK+nN9DJWfLFcv3y0UeH8kK7/GyHLXexLHAQo2khGqocfV
        fDaeVMViodBxTR4aTS95OZrlco57zouyGEPhnExD0Bf0kbtedsInCgm6rBT+0zc8VxAW429gOh0U
        bMvOUoJ+v6Cj9JeM7AkaJiWXxAS5DnIQCtd5kyV3zWdNJBIXmowP2RaP5D1nG46+Hm2BQeHggkvt
        LpJJHKCRhHsouFDTF3QxfAx3PwAAAP//AwDkuIBrQgEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd81d8c7a02635d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 18:35:00 GMT
      Function-Execution-Id:
      - ldyc937g9qlq
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '953'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 74a5464c0ec15886db09f7d92ffc0064;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89466'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 356ms
      X-Request-Id:
      - e0deb1a796ff1d042dd54e6661e746ab
    status:
      code: 200
      message: OK
version: 1
